# Project
# --------------------------------
[project]
name = "roast-roulette"
version = "0.1.0"
description = "A multiplayer party game where an LLM roasts random players."
authors = [
    {name = "Christian Tanul", email = "tanulchristian@gmail.com"}
]
requires-python = ">=3.12"
readme = "README.md"

# Base dependencies
dependencies = [
    # Django
    "Django", # https://github.com/django/django
    "django-environ", # https://github.com/joke2k/django-environ
    "django-allauth[socialaccount]", # https://github.com/pennersr/django-allauth
    "django-redis", # https://github.com/jazzband/django-redis
    "django-htmx", # https://github.com/adamchainz/django-htmx
    "django-jinja", # https://github.com/niwinz/django-jinja
    "jinjax", # https://github.com/jpsca/jinjax
    # Utilities
    "whitenoise", # https://github.com/evansd/whitenoise
    "redis", # https://github.com/redis/redis-py
    "hiredis", # https://github.com/redis/hiredis-py
    "uvicorn[standard]", # https://github.com/encode/uvicorn
    "uvicorn-worker", # https://github.com/Kludex/uvicorn-worker
    "channels", # https://github.com/django/channels
    "shortuuid",
    "Pillow",
]


[dependency-groups]
# Development tools (install with: uv pip install . --group dev)
dev = [
    "Werkzeug[watchdog]==3.1.3",              # https://github.com/pallets/werkzeug
    "ipdb==0.13.13",                          # https://github.com/gotcha/ipdb
    "watchfiles==1.0.0",                      # https://github.com/samuelcolvin/watchfiles
    "django-debug-toolbar==4.4.6",            # https://github.com/jazzband/django-debug-toolbar
    "django-extensions==3.2.3",               # https://github.com/django-extensions/django-extensions
    "ruff==0.8.0",                            # https://github.com/astral-sh/ruff
    "mypy==1.13.0",                           # https://github.com/python/mypy
    "django-stubs[compatible-mypy]==5.1.1",   # https://github.com/typeddjango/django-stubs
]

# Production dependencies (install with: uv pip install . --group production)
production = [
    # Web Server
    "gunicorn==23.0.0",                       # https://github.com/benoitc/gunicorn
]


# mypy
# --------------------------------
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ruff
# --------------------------------
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*",
    "main/chats/prompts.py"  # Exclude this specific file
]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    'ISC',
    "ICN",
    "G",
    'INP',
    'PIE',
    "T20",
    'PYI',
    'PT',
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    # "ARG", # Unused function argument
    "PTH",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    # "NPY",
    # "AIR",
    "PERF",
    # "FURB",
    # "LOG",
    "RUF"
]
ignore = [
    "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "SIM102", # sometimes it's better to nest
    "UP038", # Checks for uses of isinstance/issubclass that take a tuple
    'COM812', # Missing trailing comma
    'ISC001', # Implicitly concatenated strings on a single line
    'PLC0415', # Import outside top level
    # of types for comparison.
    # Deactivated because it can make the code slow:
    # https://github.com/astral-sh/ruff/issues/7871
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = [
    "UP038"
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true
