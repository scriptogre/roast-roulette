# Generated by Django 5.1.5 on 2025-02-14 15:12

import django.core.validators
import django.db.models.deletion
import main.games.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=main.games.models.generate_unique_code, help_text='A unique 4-character game code for players to join.', max_length=4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of game creation.')),
                ('current_round', models.IntegerField(default=0, help_text='Tracks which round the game is in.')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the game is ongoing or ended.')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The player's display name.", max_length=50, validators=[django.core.validators.MinLengthValidator(3)])),
                ('session_id', models.CharField(help_text="Unique ID to track the player's browser session.", max_length=32)),
                ('score', models.IntegerField(default=0, help_text="The player's score.")),
                ('is_host', models.BooleanField(default=False, help_text='True if the player created the game.')),
                ('avatar', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=1, help_text="Number representing the player's chosen avatar (1-8).")),
                ('game', models.ForeignKey(help_text='The game this player belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, to='games.game')),
            ],
            options={
                'unique_together': {('game', 'session_id')},
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='The uploaded image file.', upload_to='uploads/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of photo upload.')),
                ('round_number', models.IntegerField(default=0, help_text='The round number for this photo.')),
                ('game', models.ForeignKey(help_text='The game this photo belongs to.', on_delete=django.db.models.deletion.CASCADE, to='games.game')),
                ('player', models.ForeignKey(help_text='The player who uploaded the photo.', on_delete=django.db.models.deletion.CASCADE, to='games.player')),
            ],
        ),
        migrations.CreateModel(
            name='Roast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_roast', models.TextField(help_text='The AI-generated roast for this photo.')),
                ('clapback', models.TextField(blank=True, help_text="Player's witty response to the roast.")),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of roast creation.')),
                ('game', models.ForeignKey(help_text='The game this roast belongs to.', on_delete=django.db.models.deletion.CASCADE, to='games.game')),
                ('photo', models.ForeignKey(help_text='The photo being roasted.', on_delete=django.db.models.deletion.CASCADE, to='games.photo')),
            ],
        ),
    ]
