# Generated by Django 5.1.5 on 2025-02-22 23:38

import django.core.validators
import django.db.models.deletion
import main.games.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time this record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time this record was last updated.')),
                ('code', models.CharField(default=main.games.models.generate_unique_code, help_text='A unique 4-character game code for players to join.', max_length=4, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the game is ongoing or ended.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time this record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time this record was last updated.')),
                ('session_id', models.CharField(help_text="Unique ID to track the player's browser session.", max_length=32)),
                ('name', models.CharField(help_text="The player's display name.", max_length=32, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(32)])),
                ('avatar', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=1, help_text="Number representing the player's chosen avatar (1-8).")),
                ('hp', models.IntegerField(default=3, help_text="The player's health points.")),
                ('is_host', models.BooleanField(default=False, help_text='True if the player created the game.')),
                ('game', models.ForeignKey(help_text='The game this player belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='players', to='games.game')),
            ],
            options={
                'unique_together': {('game', 'session_id')},
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time this record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time this record was last updated.')),
                ('image', models.ImageField(help_text='The uploaded image file.', upload_to='uploads/')),
                ('is_roast_target', models.BooleanField(default=False, help_text='True if this photo is the target for roasting in the current round.')),
                ('player', models.ForeignKey(help_text='The player who uploaded the photo.', on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='games.player')),
            ],
        ),
        migrations.CreateModel(
            name='Roast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time this record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time this record was last updated.')),
                ('roast_text', models.TextField(blank=True, help_text='The final composed roast text.', null=True)),
                ('photo', models.ForeignKey(help_text='The photo being roasted.', on_delete=django.db.models.deletion.CASCADE, to='games.photo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time this record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time this record was last updated.')),
                ('count', models.IntegerField(help_text='The round number (1, 2, 3, etc.)')),
                ('state', models.CharField(choices=[('SUBMIT_PHOTOS', 'Submit Photos'), ('SHOW_TARGET', 'Show Roast Target Photo'), ('SUBMIT_ROASTS', 'Submit Roasts for Target Photo'), ('SHOW_ROAST', 'Show Roast')], default='SUBMIT_PHOTOS', help_text='Current state of this round.', max_length=20)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='games.game')),
            ],
            options={
                'unique_together': {('game', 'count')},
            },
        ),
        migrations.CreateModel(
            name='RoastPieces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time this record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time this record was last updated.')),
                ('text', models.TextField(help_text='A single roast piece.')),
                ('game', models.ForeignKey(help_text='The game this roast piece belongs to.', on_delete=django.db.models.deletion.CASCADE, to='games.game')),
                ('player', models.ForeignKey(help_text='The player who contributed the roast piece.', on_delete=django.db.models.deletion.CASCADE, related_name='roast_pieces', to='games.player')),
                ('roast', models.ForeignKey(blank=True, help_text='The roast this roast piece belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='games.roast')),
                ('round', models.ForeignKey(help_text='The round this roast piece belongs to.', on_delete=django.db.models.deletion.CASCADE, to='games.round')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='roast',
            name='round',
            field=models.OneToOneField(help_text='The round this roast belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='roast', to='games.round'),
        ),
        migrations.AddField(
            model_name='photo',
            name='round',
            field=models.ForeignKey(help_text='The round this photo belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='games.round'),
        ),
        migrations.AlterUniqueTogether(
            name='photo',
            unique_together={('round', 'player')},
        ),
    ]
