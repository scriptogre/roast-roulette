/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-pink-500: hsl(337, 83%, 55%);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --spacing: 0.25rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-2xl: 42rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.375rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.5rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 1.625rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 1.75rem;
    --text-5xl--line-height: 1;
    --text-7xl: 2rem;
    --text-7xl--line-height: 1;
    --text-9xl: 2.25rem;
    --text-9xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --radius-sm: 0.25rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --drop-shadow-xl: 0 9px 7px rgb(0 0 0 / 0.1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-xs: 4px;
    --default-transition-duration: 300ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-oxanium: 'Oxanium', sans-serif;
    --font-baloo-2: 'Baloo 2', sans-serif;
    --color-neutral-350: #BBBBBB;
    --color-purple-neutral-300: hsl(269, 24%, 45%);
    --color-purple-neutral-500: hsl(269, 24%, 35%);
    --color-purple-neutral-900: hsl(269, 24%, 15%);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@layer utilities {
  .invisible {
    visibility: hidden;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\.75 {
    top: calc(var(--spacing) * 1.75);
  }
  .top-full {
    top: 100%;
  }
  .-right-1 {
    right: calc(var(--spacing) * -1);
  }
  .-right-1\.25 {
    right: calc(var(--spacing) * -1.25);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .-bottom-1 {
    bottom: calc(var(--spacing) * -1);
  }
  .-bottom-1\.25 {
    bottom: calc(var(--spacing) * -1.25);
  }
  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }
  .bottom-2 {
    bottom: calc(var(--spacing) * 2);
  }
  .z-10 {
    z-index: 10;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-4\.5 {
    margin-block: calc(var(--spacing) * 4.5);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-18 {
    margin-block: calc(var(--spacing) * 18);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-3 {
    margin-inline-start: calc(var(--spacing) * 3);
  }
  .me-1 {
    margin-inline-end: calc(var(--spacing) * 1);
  }
  .me-1\.5 {
    margin-inline-end: calc(var(--spacing) * 1.5);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .me-2\.5 {
    margin-inline-end: calc(var(--spacing) * 2.5);
  }
  .-mt-1 {
    margin-top: calc(var(--spacing) * -1);
  }
  .-mt-20 {
    margin-top: calc(var(--spacing) * -20);
  }
  .-mt-24 {
    margin-top: calc(var(--spacing) * -24);
  }
  .-mt-\[50vh\] {
    margin-top: calc(50vh * -1);
  }
  .-mt-\[100vh\] {
    margin-top: calc(100vh * -1);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-2\.5 {
    margin-top: calc(var(--spacing) * 2.5);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-4\.5 {
    margin-top: calc(var(--spacing) * 4.5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-9 {
    margin-top: calc(var(--spacing) * 9);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mt-48 {
    margin-top: calc(var(--spacing) * 48);
  }
  .mt-80 {
    margin-top: calc(var(--spacing) * 80);
  }
  .mt-96 {
    margin-top: calc(var(--spacing) * 96);
  }
  .mt-\[1\.5px\] {
    margin-top: 1.5px;
  }
  .-mb-24 {
    margin-bottom: calc(var(--spacing) * -24);
  }
  .-mb-48 {
    margin-bottom: calc(var(--spacing) * -48);
  }
  .-mb-80 {
    margin-bottom: calc(var(--spacing) * -80);
  }
  .-mb-96 {
    margin-bottom: calc(var(--spacing) * -96);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-18 {
    margin-bottom: calc(var(--spacing) * 18);
  }
  .mb-\[50vh\] {
    margin-bottom: 50vh;
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .table {
    display: table;
  }
  .field-sizing-content {
    field-sizing: content;
  }
  .aspect-4\/3 {
    aspect-ratio: 4/3;
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .size-22 {
    width: calc(var(--spacing) * 22);
    height: calc(var(--spacing) * 22);
  }
  .size-28 {
    width: calc(var(--spacing) * 28);
    height: calc(var(--spacing) * 28);
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-\[1em\] {
    height: 1em;
  }
  .h-\[6rem\] {
    height: 6rem;
  }
  .h-\[8rem\] {
    height: 8rem;
  }
  .h-\[10rem\] {
    height: 10rem;
  }
  .h-\[11\.2rem\] {
    height: 11.2rem;
  }
  .h-\[50vh\] {
    height: 50vh;
  }
  .h-dvh {
    height: 100dvh;
  }
  .max-h-\[90\%\] {
    max-height: 90%;
  }
  .max-h-\[300px\] {
    max-height: 300px;
  }
  .max-h-\[500px\] {
    max-height: 500px;
  }
  .max-h-\[calc\(100\%-3rem\)\] {
    max-height: calc(100% - 3rem);
  }
  .min-h-\[50vh\] {
    min-height: 50vh;
  }
  .w-\(--photo-width\) {
    width: var(--photo-width);
  }
  .w-2xl {
    width: var(--container-2xl);
  }
  .w-2xs {
    width: var(--container-2xs);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-\[3ch\] {
    width: 3ch;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\(--photo-width\) {
    max-width: var(--photo-width);
  }
  .max-w-2xs {
    max-width: var(--container-2xs);
  }
  .max-w-3xs {
    max-width: var(--container-3xs);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-\[14rem\] {
    max-width: 14rem;
  }
  .max-w-\[16ch\] {
    max-width: 16ch;
  }
  .max-w-\[18rem\] {
    max-width: 18rem;
  }
  .max-w-\[100\%\] {
    max-width: 100%;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-\(--photo-width\) {
    min-width: var(--photo-width);
  }
  .min-w-36 {
    min-width: calc(var(--spacing) * 36);
  }
  .min-w-\[100\%\] {
    min-width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-\[calc\(var\(--index\)\*100\%\)\] {
    --tw-translate-x: calc(calc(var(--index) * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\(--center-of-target-photo\) {
    --tw-translate-x: var(--center-of-target-photo);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-4 {
    --tw-translate-y: calc(var(--spacing) * -4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-14 {
    --tw-translate-y: calc(var(--spacing) * -14);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-px {
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[2px\] {
    --tw-translate-y: 2px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-px {
    --tw-translate-y: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-y-\[1\.1\] {
    --tw-scale-y: 1.1;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-\[1\.1\] {
    scale: 1.1;
  }
  .scale-\[1\.05\] {
    scale: 1.05;
  }
  .scale-\[1\.5\] {
    scale: 1.5;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .touch-manipulation {
    touch-action: manipulation;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .appearance-none {
    appearance: none;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-content-center {
    place-content: center;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-\(--gap-width\) {
    gap: var(--gap-width);
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-0\.75 {
    gap: calc(var(--spacing) * 0.75);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .space-x-6 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-scroll {
    overflow: scroll;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-3xl {
    border-top-left-radius: var(--radius-3xl);
    border-top-right-radius: var(--radius-3xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-neutral-300 {
    border-color: var(--color-neutral-300);
  }
  .border-neutral-300\/20 {
    border-color: color-mix(in srgb, oklch(87% 0 0) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-300) 20%, transparent);
    }
  }
  .border-pink-500 {
    border-color: var(--color-pink-500);
  }
  .border-pink-500\/0 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 0%, transparent);
    }
  }
  .border-pink-500\/10 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 10%, transparent);
    }
  }
  .border-pink-500\/20 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
    }
  }
  .border-pink-500\/30 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 30%, transparent);
    }
  }
  .border-pink-500\/40 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 40%, transparent);
    }
  }
  .border-pink-500\/50 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 50%, transparent);
    }
  }
  .border-pink-500\/60 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 60%, transparent);
    }
  }
  .border-pink-500\/70 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 70%, transparent);
    }
  }
  .border-pink-500\/80 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 80%, transparent);
    }
  }
  .border-pink-500\/90 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 90%, transparent);
    }
  }
  .border-pink-500\/100 {
    border-color: color-mix(in srgb, hsl(337, 83%, 55%) 100%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-pink-500) 100%, transparent);
    }
  }
  .border-purple-neutral-900 {
    border-color: var(--color-purple-neutral-900);
  }
  .border-purple-neutral-900\/50 {
    border-color: color-mix(in srgb, hsl(269, 24%, 15%) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-purple-neutral-900) 50%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .bg-\[\#130A1A\] {
    background-color: #130A1A;
  }
  .bg-\[\#EC3179\] {
    background-color: #EC3179;
  }
  .bg-neutral-300 {
    background-color: var(--color-neutral-300);
  }
  .bg-neutral-300\/2\.5 {
    background-color: color-mix(in srgb, oklch(87% 0 0) 2.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-300) 2.5%, transparent);
    }
  }
  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }
  .bg-purple-neutral-900 {
    background-color: var(--color-purple-neutral-900);
  }
  .bg-purple-neutral-900\/25 {
    background-color: color-mix(in srgb, hsl(269, 24%, 15%) 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-purple-neutral-900) 25%, transparent);
    }
  }
  .bg-linear-175 {
    --tw-gradient-position: 175deg;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: 175deg in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-\[\#130A1B\] {
    --tw-gradient-from: #130A1B;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-50\% {
    --tw-gradient-from-position: 50%;
  }
  .to-\[\#110918\] {
    --tw-gradient-to: #110918;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-fixed {
    background-attachment: fixed;
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.75 {
    padding-inline: calc(var(--spacing) * 3.75);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-4\.5 {
    padding-inline: calc(var(--spacing) * 4.5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-6\.5 {
    padding-inline: calc(var(--spacing) * 6.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-2\.75 {
    padding-block: calc(var(--spacing) * 2.75);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .font-baloo-2 {
    font-family: var(--font-baloo-2);
  }
  .font-oxanium {
    font-family: var(--font-oxanium);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.625rem\] {
    font-size: 0.625rem;
  }
  .text-\[1\.75rem\] {
    font-size: 1.75rem;
  }
  .text-\[2\.5rem\] {
    font-size: 2.5rem;
  }
  .text-\[3\.5rem\] {
    font-size: 3.5rem;
  }
  .leading-\[1em\] {
    --tw-leading: 1em;
    line-height: 1em;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .text-\[\#140B1B\] {
    color: #140B1B;
  }
  .text-neutral-200 {
    color: var(--color-neutral-200);
  }
  .text-neutral-300 {
    color: var(--color-neutral-300);
  }
  .text-neutral-350 {
    color: var(--color-neutral-350);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-pink-500 {
    color: var(--color-pink-500);
  }
  .text-purple-neutral-300 {
    color: var(--color-purple-neutral-300);
  }
  .text-purple-neutral-500 {
    color: var(--color-purple-neutral-500);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .placeholder-purple-neutral-500 {
    &::placeholder {
      color: var(--color-purple-neutral-500);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-0 {
    outline-style: var(--tw-outline-style);
    outline-width: 0px;
  }
  .brightness-25 {
    --tw-brightness: brightness(25%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow-xl {
    --tw-drop-shadow-size: drop-shadow(0 9px 7px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.1)));
    --tw-drop-shadow: drop-shadow(var(--drop-shadow-xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform\,opacity\] {
    transition-property: transform,opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-\(--animation-duration\) {
    transition-delay: var(--animation-duration);
  }
  .delay-\[calc\(var\(--animation-duration\)\+1s\)\] {
    transition-delay: calc(var(--animation-duration) + 1s);
  }
  .delay-\[calc\(var\(--animation-duration\)-1s\)\] {
    transition-delay: calc(var(--animation-duration) - 1s);
  }
  .duration-\(--animation-duration\) {
    --tw-duration: var(--animation-duration);
    transition-duration: var(--animation-duration);
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .duration-\[250ms\] {
    --tw-duration: 250ms;
    transition-duration: 250ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .\!outline-none {
    --tw-outline-style: none !important;
    outline-style: none !important;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .not-first\:mt-6 {
    &:not(*:first-child) {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .group-peer-checked\:hidden {
    &:is(:where(.group):is(:where(.peer):checked ~ *) *) {
      display: none;
    }
  }
  .group-hover\:border-purple-neutral-300 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-purple-neutral-300);
      }
    }
  }
  .group-hover\:text-pink-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-pink-500);
      }
    }
  }
  .group-focus\:text-pink-500 {
    &:is(:where(.group):focus *) {
      color: var(--color-pink-500);
    }
  }
  .group-has-focus\:text-pink-500 {
    &:is(:where(.group):has(*:focus) *) {
      color: var(--color-pink-500);
    }
  }
  .group-has-nth-3\:size-12 {
    &:is(:where(.group):has(*:nth-child(3)) *) {
      width: calc(var(--spacing) * 12);
      height: calc(var(--spacing) * 12);
    }
  }
  .group-has-nth-3\:text-base {
    &:is(:where(.group):has(*:nth-child(3)) *) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .group-has-nth-3\:text-xs {
    &:is(:where(.group):has(*:nth-child(3)) *) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .group-has-nth-6\:size-10 {
    &:is(:where(.group):has(*:nth-child(6)) *) {
      width: calc(var(--spacing) * 10);
      height: calc(var(--spacing) * 10);
    }
  }
  .group-has-nth-6\:text-sm {
    &:is(:where(.group):has(*:nth-child(6)) *) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .group-has-nth-6\:text-\[0\.675rem\] {
    &:is(:where(.group):has(*:nth-child(6)) *) {
      font-size: 0.675rem;
    }
  }
  .peer-checked\:scale-\[1\] {
    &:is(:where(.peer):checked ~ *) {
      scale: 1;
    }
  }
  .peer-checked\:border-pink-500\/50 {
    &:is(:where(.peer):checked ~ *) {
      border-color: color-mix(in srgb, hsl(337, 83%, 55%) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-pink-500) 50%, transparent);
      }
    }
  }
  .peer-checked\:text-pink-500 {
    &:is(:where(.peer):checked ~ *) {
      color: var(--color-pink-500);
    }
  }
  .peer-checked\:opacity-100 {
    &:is(:where(.peer):checked ~ *) {
      opacity: 100%;
    }
  }
  .peer-has-checked\:visible {
    &:is(:where(.peer):has(*:checked) ~ *) {
      visibility: visible;
    }
  }
  .peer-has-checked\:opacity-100 {
    &:is(:where(.peer):has(*:checked) ~ *) {
      opacity: 100%;
    }
  }
  .placeholder\:font-normal {
    &::placeholder {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .placeholder\:normal-case {
    &::placeholder {
      text-transform: none;
    }
  }
  .placeholder\:transition {
    &::placeholder {
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:relative {
    &::before {
      content: var(--tw-content);
      position: relative;
    }
  }
  .before\:top-\[calc\(var\(--seconds-left\)\*-1em\)\] {
    &::before {
      content: var(--tw-content);
      top: calc(var(--seconds-left) * -1em);
    }
  }
  .before\:left-1\/2 {
    &::before {
      content: var(--tw-content);
      left: calc(1/2 * 100%);
    }
  }
  .before\:size-full {
    &::before {
      content: var(--tw-content);
      width: 100%;
      height: 100%;
    }
  }
  .before\:-translate-x-1\/2 {
    &::before {
      content: var(--tw-content);
      --tw-translate-x: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:rounded-2xl {
    &::before {
      content: var(--tw-content);
      border-radius: var(--radius-2xl);
    }
  }
  .before\:bg-\(image\:--laughing-emoji-background\) {
    &::before {
      content: var(--tw-content);
      background-image: var(--laughing-emoji-background);
    }
  }
  .before\:bg-size-\[50\%\] {
    &::before {
      content: var(--tw-content);
      background-size: 50%;
    }
  }
  .before\:bg-center {
    &::before {
      content: var(--tw-content);
      background-position: center;
    }
  }
  .before\:bg-no-repeat {
    &::before {
      content: var(--tw-content);
      background-repeat: no-repeat;
    }
  }
  .before\:text-center {
    &::before {
      content: var(--tw-content);
      text-align: center;
    }
  }
  .before\:whitespace-pre {
    &::before {
      content: var(--tw-content);
      white-space: pre;
    }
  }
  .before\:text-neutral-300 {
    &::before {
      content: var(--tw-content);
      color: var(--color-neutral-300);
    }
  }
  .before\:opacity-0 {
    &::before {
      content: var(--tw-content);
      opacity: 0%;
    }
  }
  .before\:transition {
    &::before {
      content: var(--tw-content);
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:duration-\[250ms\] {
    &::before {
      content: var(--tw-content);
      --tw-duration: 250ms;
      transition-duration: 250ms;
    }
  }
  .before\:content-\(--seconds-content\) {
    &::before {
      content: var(--tw-content);
      --tw-content: var(--seconds-content);
      content: var(--tw-content);
    }
  }
  .before\:content-\[\'\'\] {
    &::before {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .after\:fixed {
    &::after {
      content: var(--tw-content);
      position: fixed;
    }
  }
  .after\:top-0 {
    &::after {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .after\:left-0 {
    &::after {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .after\:h-0\.5 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 0.5);
    }
  }
  .after\:w-full {
    &::after {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .after\:scale-x-\[calc\(\(var\(--seconds-left\)\/var\(--seconds-total\)\)\*100\%\)\] {
    &::after {
      content: var(--tw-content);
      --tw-scale-x: calc((var(--seconds-left) / var(--seconds-total)) * 100%);
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .after\:bg-neutral-300\/50 {
    &::after {
      content: var(--tw-content);
      background-color: color-mix(in srgb, oklch(87% 0 0) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-300) 50%, transparent);
      }
    }
  }
  .after\:transition-transform {
    &::after {
      content: var(--tw-content);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .after\:duration-\[1s\] {
    &::after {
      content: var(--tw-content);
      --tw-duration: 1s;
      transition-duration: 1s;
    }
  }
  .empty\:hidden {
    &:empty {
      display: none;
    }
  }
  .hover\:scale-\[1\.02\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.02;
      }
    }
  }
  .hover\:scale-\[1\.05\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.05;
      }
    }
  }
  .hover\:scale-\[1\.025\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.025;
      }
    }
  }
  .hover\:border-purple-neutral-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-purple-neutral-300);
      }
    }
  }
  .hover\:bg-neutral-300\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(87% 0 0) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-300) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-purple-neutral-900\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, hsl(269, 24%, 15%) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-purple-neutral-900) 50%, transparent);
        }
      }
    }
  }
  .hover\:text-pink-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-500);
      }
    }
  }
  .hover\:brightness-\[120\%\] {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(120%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .focus\:scale-\[1\.02\] {
    &:focus {
      scale: 1.02;
    }
  }
  .focus\:scale-\[1\.05\] {
    &:focus {
      scale: 1.05;
    }
  }
  .focus\:scale-\[1\.025\] {
    &:focus {
      scale: 1.025;
    }
  }
  .focus\:border-pink-500 {
    &:focus {
      border-color: var(--color-pink-500);
    }
  }
  .focus\:bg-neutral-300\/5 {
    &:focus {
      background-color: color-mix(in srgb, oklch(87% 0 0) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-300) 5%, transparent);
      }
    }
  }
  .focus\:brightness-\[120\%\] {
    &:focus {
      --tw-brightness: brightness(120%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .active\:scale-\[1\.1\] {
    &:active {
      scale: 1.1;
    }
  }
  .active\:scale-\[1\.075\] {
    &:active {
      scale: 1.075;
    }
  }
  .active\:bg-purple-neutral-900\/50 {
    &:active {
      background-color: color-mix(in srgb, hsl(269, 24%, 15%) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-purple-neutral-900) 50%, transparent);
      }
    }
  }
  .active\:text-pink-500 {
    &:active {
      color: var(--color-pink-500);
    }
  }
  .has-checked\:-translate-y-full {
    &:has(*:checked) {
      --tw-translate-y: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .has-checked\:before\:opacity-5 {
    &:has(*:checked) {
      &::before {
        content: var(--tw-content);
        opacity: 5%;
      }
    }
  }
  .has-focus\:border-pink-500\/50 {
    &:has(*:focus) {
      border-color: color-mix(in srgb, hsl(337, 83%, 55%) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-pink-500) 50%, transparent);
      }
    }
  }
  .has-nth-3\:gap-7 {
    &:has(*:nth-child(3)) {
      gap: calc(var(--spacing) * 7);
    }
  }
  .has-nth-6\:gap-6 {
    &:has(*:nth-child(6)) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .data-\[show\=false\]\:opacity-0 {
    &[data-show="false"] {
      opacity: 0%;
    }
  }
  .data-\[show\=true\]\:opacity-100 {
    &[data-show="true"] {
      opacity: 100%;
    }
  }
  .max-lg\:mb-12 {
    @media (width < 64rem) {
      margin-bottom: calc(var(--spacing) * 12);
    }
  }
  .max-lg\:mb-24 {
    @media (width < 64rem) {
      margin-bottom: calc(var(--spacing) * 24);
    }
  }
  .sm\:mt-2\.25 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 2.25);
    }
  }
  .sm\:mt-4\.5 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 4.5);
    }
  }
  .sm\:mb-24 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 24);
    }
  }
  .sm\:size-10 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 10);
      height: calc(var(--spacing) * 10);
    }
  }
  .sm\:size-26 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 26);
      height: calc(var(--spacing) * 26);
    }
  }
  .sm\:w-xs {
    @media (width >= 40rem) {
      width: var(--container-xs);
    }
  }
  .sm\:max-w-2xs {
    @media (width >= 40rem) {
      max-width: var(--container-2xs);
    }
  }
  .sm\:max-w-xs {
    @media (width >= 40rem) {
      max-width: var(--container-xs);
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .sm\:text-\[2rem\] {
    @media (width >= 40rem) {
      font-size: 2rem;
    }
  }
  .lg\:top-2\.25 {
    @media (width >= 64rem) {
      top: calc(var(--spacing) * 2.25);
    }
  }
  .lg\:-right-0\.5 {
    @media (width >= 64rem) {
      right: calc(var(--spacing) * -0.5);
    }
  }
  .lg\:-bottom-0\.5 {
    @media (width >= 64rem) {
      bottom: calc(var(--spacing) * -0.5);
    }
  }
  .lg\:z-10 {
    @media (width >= 64rem) {
      z-index: 10;
    }
  }
  .lg\:mx-12 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 12);
    }
  }
  .lg\:my-6 {
    @media (width >= 64rem) {
      margin-block: calc(var(--spacing) * 6);
    }
  }
  .lg\:my-9 {
    @media (width >= 64rem) {
      margin-block: calc(var(--spacing) * 9);
    }
  }
  .lg\:my-27 {
    @media (width >= 64rem) {
      margin-block: calc(var(--spacing) * 27);
    }
  }
  .lg\:me-3 {
    @media (width >= 64rem) {
      margin-inline-end: calc(var(--spacing) * 3);
    }
  }
  .lg\:mt-0 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:mt-2 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .lg\:mt-2\.5 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 2.5);
    }
  }
  .lg\:mt-2\.75 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 2.75);
    }
  }
  .lg\:mt-3 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .lg\:mt-4 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 4);
    }
  }
  .lg\:mt-4\.5 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 4.5);
    }
  }
  .lg\:mt-5 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 5);
    }
  }
  .lg\:mt-5\.25 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 5.25);
    }
  }
  .lg\:mt-6 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .lg\:mt-9 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 9);
    }
  }
  .lg\:mt-10 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .lg\:mt-12 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .lg\:mt-18 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 18);
    }
  }
  .lg\:mt-24 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 24);
    }
  }
  .lg\:mb-0 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:mb-3 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 3);
    }
  }
  .lg\:mb-4\.5 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 4.5);
    }
  }
  .lg\:mb-18 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 18);
    }
  }
  .lg\:mb-27 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 27);
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:inline-flex {
    @media (width >= 64rem) {
      display: inline-flex;
    }
  }
  .lg\:size-5 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 5);
      height: calc(var(--spacing) * 5);
    }
  }
  .lg\:size-7 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 7);
      height: calc(var(--spacing) * 7);
    }
  }
  .lg\:size-11 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 11);
      height: calc(var(--spacing) * 11);
    }
  }
  .lg\:size-18 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 18);
      height: calc(var(--spacing) * 18);
    }
  }
  .lg\:size-30 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 30);
      height: calc(var(--spacing) * 30);
    }
  }
  .lg\:size-32 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 32);
      height: calc(var(--spacing) * 32);
    }
  }
  .lg\:h-24 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .lg\:max-h-\[50\%\] {
    @media (width >= 64rem) {
      max-height: 50%;
    }
  }
  .lg\:w-0\.5 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 0.5);
    }
  }
  .lg\:w-sm {
    @media (width >= 64rem) {
      width: var(--container-sm);
    }
  }
  .lg\:max-w-3xs {
    @media (width >= 64rem) {
      max-width: var(--container-3xs);
    }
  }
  .lg\:max-w-sm {
    @media (width >= 64rem) {
      max-width: var(--container-sm);
    }
  }
  .lg\:max-w-xs {
    @media (width >= 64rem) {
      max-width: var(--container-xs);
    }
  }
  .lg\:cursor-pointer {
    @media (width >= 64rem) {
      cursor: pointer;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:flex-wrap {
    @media (width >= 64rem) {
      flex-wrap: wrap;
    }
  }
  .lg\:justify-between {
    @media (width >= 64rem) {
      justify-content: space-between;
    }
  }
  .lg\:gap-3 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .lg\:gap-10 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:gap-24 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 24);
    }
  }
  .lg\:space-x-9 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 9) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 9) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .lg\:p-8 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .lg\:px-4 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .lg\:px-5 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .lg\:px-5\.5 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 5.5);
    }
  }
  .lg\:px-7 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 7);
    }
  }
  .lg\:px-7\.5 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 7.5);
    }
  }
  .lg\:py-2\.75 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 2.75);
    }
  }
  .lg\:py-3 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .lg\:py-4 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .lg\:py-5 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 5);
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-3xl {
    @media (width >= 64rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-7xl {
    @media (width >= 64rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .lg\:text-base {
    @media (width >= 64rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .lg\:text-sm {
    @media (width >= 64rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .lg\:text-xs {
    @media (width >= 64rem) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .lg\:text-\[2\.25rem\] {
    @media (width >= 64rem) {
      font-size: 2.25rem;
    }
  }
  .lg\:text-\[2\.75rem\] {
    @media (width >= 64rem) {
      font-size: 2.75rem;
    }
  }
  .lg\:text-\[4rem\] {
    @media (width >= 64rem) {
      font-size: 4rem;
    }
  }
  .lg\:group-has-nth-3\:size-16 {
    @media (width >= 64rem) {
      &:is(:where(.group):has(*:nth-child(3)) *) {
        width: calc(var(--spacing) * 16);
        height: calc(var(--spacing) * 16);
      }
    }
  }
  .lg\:group-has-nth-3\:text-lg {
    @media (width >= 64rem) {
      &:is(:where(.group):has(*:nth-child(3)) *) {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
    }
  }
  .lg\:group-has-nth-3\:text-sm {
    @media (width >= 64rem) {
      &:is(:where(.group):has(*:nth-child(3)) *) {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
      }
    }
  }
  .lg\:group-has-nth-6\:size-14 {
    @media (width >= 64rem) {
      &:is(:where(.group):has(*:nth-child(6)) *) {
        width: calc(var(--spacing) * 14);
        height: calc(var(--spacing) * 14);
      }
    }
  }
  .lg\:group-has-nth-6\:text-base {
    @media (width >= 64rem) {
      &:is(:where(.group):has(*:nth-child(6)) *) {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
      }
    }
  }
  .lg\:group-has-nth-6\:text-xs {
    @media (width >= 64rem) {
      &:is(:where(.group):has(*:nth-child(6)) *) {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
      }
    }
  }
  .lg\:focus\:scale-\[2\.5\] {
    @media (width >= 64rem) {
      &:focus {
        scale: 2.5;
      }
    }
  }
  .lg\:has-nth-3\:gap-9 {
    @media (width >= 64rem) {
      &:has(*:nth-child(3)) {
        gap: calc(var(--spacing) * 9);
      }
    }
  }
  .lg\:has-nth-6\:gap-8 {
    @media (width >= 64rem) {
      &:has(*:nth-child(6)) {
        gap: calc(var(--spacing) * 8);
      }
    }
  }
  .\32 xl\:top-2\.5 {
    @media (width >= 96rem) {
      top: calc(var(--spacing) * 2.5);
    }
  }
  .\32 xl\:me-3\.5 {
    @media (width >= 96rem) {
      margin-inline-end: calc(var(--spacing) * 3.5);
    }
  }
  .\32 xl\:mt-0\.5 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 0.5);
    }
  }
  .\32 xl\:mt-2 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .\32 xl\:mt-2\.75 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 2.75);
    }
  }
  .\32 xl\:mt-3 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .\32 xl\:mt-4\.5 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 4.5);
    }
  }
  .\32 xl\:mt-5\.5 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 5.5);
    }
  }
  .\32 xl\:mt-6 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .\32 xl\:mt-12 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .\32 xl\:mb-4 {
    @media (width >= 96rem) {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  .\32 xl\:size-12 {
    @media (width >= 96rem) {
      width: calc(var(--spacing) * 12);
      height: calc(var(--spacing) * 12);
    }
  }
  .\32 xl\:size-24 {
    @media (width >= 96rem) {
      width: calc(var(--spacing) * 24);
      height: calc(var(--spacing) * 24);
    }
  }
  .\32 xl\:size-32 {
    @media (width >= 96rem) {
      width: calc(var(--spacing) * 32);
      height: calc(var(--spacing) * 32);
    }
  }
  .\32 xl\:size-34 {
    @media (width >= 96rem) {
      width: calc(var(--spacing) * 34);
      height: calc(var(--spacing) * 34);
    }
  }
  .\32 xl\:h-60 {
    @media (width >= 96rem) {
      height: calc(var(--spacing) * 60);
    }
  }
  .\32 xl\:max-w-2xs {
    @media (width >= 96rem) {
      max-width: var(--container-2xs);
    }
  }
  .\32 xl\:max-w-md {
    @media (width >= 96rem) {
      max-width: var(--container-md);
    }
  }
  .\32 xl\:gap-12 {
    @media (width >= 96rem) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .\32 xl\:px-4\.5 {
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 4.5);
    }
  }
  .\32 xl\:px-6 {
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .\32 xl\:px-6\.5 {
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 6.5);
    }
  }
  .\32 xl\:px-8 {
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .\32 xl\:py-3 {
    @media (width >= 96rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .\32 xl\:py-3\.25 {
    @media (width >= 96rem) {
      padding-block: calc(var(--spacing) * 3.25);
    }
  }
  .\32 xl\:py-5 {
    @media (width >= 96rem) {
      padding-block: calc(var(--spacing) * 5);
    }
  }
  .\32 xl\:py-6 {
    @media (width >= 96rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .\32 xl\:text-2xl {
    @media (width >= 96rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .\32 xl\:text-3xl {
    @media (width >= 96rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .\32 xl\:text-4xl {
    @media (width >= 96rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .\32 xl\:text-5xl {
    @media (width >= 96rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .\32 xl\:text-9xl {
    @media (width >= 96rem) {
      font-size: var(--text-9xl);
      line-height: var(--tw-leading, var(--text-9xl--line-height));
    }
  }
  .\32 xl\:text-lg {
    @media (width >= 96rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .\32 xl\:text-xl {
    @media (width >= 96rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .\32 xl\:text-\[2\.5rem\] {
    @media (width >= 96rem) {
      font-size: 2.5rem;
    }
  }
  .\32 xl\:text-\[3rem\] {
    @media (width >= 96rem) {
      font-size: 3rem;
    }
  }
  .\32 xl\:text-\[4\.5rem\] {
    @media (width >= 96rem) {
      font-size: 4.5rem;
    }
  }
  .\32 xl\:group-has-nth-3\:size-22 {
    @media (width >= 96rem) {
      &:is(:where(.group):has(*:nth-child(3)) *) {
        width: calc(var(--spacing) * 22);
        height: calc(var(--spacing) * 22);
      }
    }
  }
  .\32 xl\:group-has-nth-3\:text-base {
    @media (width >= 96rem) {
      &:is(:where(.group):has(*:nth-child(3)) *) {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
      }
    }
  }
  .\32 xl\:group-has-nth-3\:text-xl {
    @media (width >= 96rem) {
      &:is(:where(.group):has(*:nth-child(3)) *) {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
      }
    }
  }
  .\32 xl\:group-has-nth-6\:size-20 {
    @media (width >= 96rem) {
      &:is(:where(.group):has(*:nth-child(6)) *) {
        width: calc(var(--spacing) * 20);
        height: calc(var(--spacing) * 20);
      }
    }
  }
  .\32 xl\:group-has-nth-6\:text-lg {
    @media (width >= 96rem) {
      &:is(:where(.group):has(*:nth-child(6)) *) {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
    }
  }
  .\32 xl\:group-has-nth-6\:text-sm {
    @media (width >= 96rem) {
      &:is(:where(.group):has(*:nth-child(6)) *) {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
      }
    }
  }
  .\32 xl\:has-nth-3\:gap-5 {
    @media (width >= 96rem) {
      &:has(*:nth-child(3)) {
        gap: calc(var(--spacing) * 5);
      }
    }
  }
  .\32 xl\:has-nth-6\:gap-10 {
    @media (width >= 96rem) {
      &:has(*:nth-child(6)) {
        gap: calc(var(--spacing) * 10);
      }
    }
  }
  .starting\:translate-x-\(--start-position\) {
    @starting-style {
      --tw-translate-x: var(--start-position);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .starting\:scale-\[1\.1\] {
    @starting-style {
      scale: 1.1;
    }
  }
  .starting\:scale-\[1\.02\] {
    @starting-style {
      scale: 1.02;
    }
  }
  .starting\:scale-\[1\] {
    @starting-style {
      scale: 1;
    }
  }
  .starting\:opacity-0 {
    @starting-style {
      opacity: 0%;
    }
  }
  .starting\:opacity-25 {
    @starting-style {
      opacity: 25%;
    }
  }
}
@layer base {
  html {
    color: var(--color-neutral-300);
  }
  iconify-icon {
    display: inline-block;
    width: 1em;
    height: 1em;
  }
}
@layer utilities {
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}
